/*
 * Copyright (C) 2017 pedrotoliveira
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package br.com.ppm.commons;

import org.junit.Test;

import static org.hamcrest.CoreMatchers.equalTo;
import static org.junit.Assert.assertThat;

/**
 * Unit tests of class JsonStackTraceFormatter
 *
 * @author pedrotoliveira
 */
public class JsonStackTraceFormatterTest {

    /**
     * Test of formatToString method, of class JsonStackTraceFormatter.
     */
    @Test
    public void testFormatToString() {
        Throwable throwable = new RuntimeException("test format to string");
        String result = new JsonStackTraceFormatter().formatToString(throwable);
        @SuppressWarnings("PMD.AvoidDuplicateLiterals")
        String expected = "[\n"
                + "  {\n"
                + "    \"declaringClass\": \"br.com.ppm.commons.JsonStackTraceFormatterTest\",\n"
                + "    \"methodName\": \"testFormatToString\",\n"
                + "    \"fileName\": \"JsonStackTraceFormatterTest.java\",\n"
                + "    \"lineNumber\": 36\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"sun.reflect.NativeMethodAccessorImpl\",\n"
                + "    \"methodName\": \"invoke0\",\n"
                + "    \"fileName\": \"NativeMethodAccessorImpl.java\",\n"
                + "    \"lineNumber\": -2\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"sun.reflect.NativeMethodAccessorImpl\",\n"
                + "    \"methodName\": \"invoke\",\n"
                + "    \"fileName\": \"NativeMethodAccessorImpl.java\",\n"
                + "    \"lineNumber\": 62\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"sun.reflect.DelegatingMethodAccessorImpl\",\n"
                + "    \"methodName\": \"invoke\",\n"
                + "    \"fileName\": \"DelegatingMethodAccessorImpl.java\",\n"
                + "    \"lineNumber\": 43\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"java.lang.reflect.Method\",\n"
                + "    \"methodName\": \"invoke\",\n"
                + "    \"fileName\": \"Method.java\",\n"
                + "    \"lineNumber\": 498\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.junit.runners.model.FrameworkMethod$1\",\n"
                + "    \"methodName\": \"runReflectiveCall\",\n"
                + "    \"fileName\": \"FrameworkMethod.java\",\n"
                + "    \"lineNumber\": 50\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.junit.internal.runners.model.ReflectiveCallable\",\n"
                + "    \"methodName\": \"run\",\n"
                + "    \"fileName\": \"ReflectiveCallable.java\",\n"
                + "    \"lineNumber\": 12\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.junit.runners.model.FrameworkMethod\",\n"
                + "    \"methodName\": \"invokeExplosively\",\n"
                + "    \"fileName\": \"FrameworkMethod.java\",\n"
                + "    \"lineNumber\": 47\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.junit.internal.runners.statements.InvokeMethod\",\n"
                + "    \"methodName\": \"evaluate\",\n"
                + "    \"fileName\": \"InvokeMethod.java\",\n"
                + "    \"lineNumber\": 17\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.junit.runners.ParentRunner\",\n"
                + "    \"methodName\": \"runLeaf\",\n"
                + "    \"fileName\": \"ParentRunner.java\",\n"
                + "    \"lineNumber\": 325\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.junit.runners.BlockJUnit4ClassRunner\",\n"
                + "    \"methodName\": \"runChild\",\n"
                + "    \"fileName\": \"BlockJUnit4ClassRunner.java\",\n"
                + "    \"lineNumber\": 78\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.junit.runners.BlockJUnit4ClassRunner\",\n"
                + "    \"methodName\": \"runChild\",\n"
                + "    \"fileName\": \"BlockJUnit4ClassRunner.java\",\n"
                + "    \"lineNumber\": 57\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.junit.runners.ParentRunner$3\",\n"
                + "    \"methodName\": \"run\",\n"
                + "    \"fileName\": \"ParentRunner.java\",\n"
                + "    \"lineNumber\": 290\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.junit.runners.ParentRunner$1\",\n"
                + "    \"methodName\": \"schedule\",\n"
                + "    \"fileName\": \"ParentRunner.java\",\n"
                + "    \"lineNumber\": 71\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.junit.runners.ParentRunner\",\n"
                + "    \"methodName\": \"runChildren\",\n"
                + "    \"fileName\": \"ParentRunner.java\",\n"
                + "    \"lineNumber\": 288\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.junit.runners.ParentRunner\",\n"
                + "    \"methodName\": \"access$000\",\n"
                + "    \"fileName\": \"ParentRunner.java\",\n"
                + "    \"lineNumber\": 58\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.junit.runners.ParentRunner$2\",\n"
                + "    \"methodName\": \"evaluate\",\n"
                + "    \"fileName\": \"ParentRunner.java\",\n"
                + "    \"lineNumber\": 268\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.junit.runners.ParentRunner\",\n"
                + "    \"methodName\": \"run\",\n"
                + "    \"fileName\": \"ParentRunner.java\",\n"
                + "    \"lineNumber\": 363\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.apache.maven.surefire.junit4.JUnit4Provider\",\n"
                + "    \"methodName\": \"execute\",\n"
                + "    \"fileName\": \"JUnit4Provider.java\",\n"
                + "    \"lineNumber\": 252\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.apache.maven.surefire.junit4.JUnit4Provider\",\n"
                + "    \"methodName\": \"executeTestSet\",\n"
                + "    \"fileName\": \"JUnit4Provider.java\",\n"
                + "    \"lineNumber\": 141\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.apache.maven.surefire.junit4.JUnit4Provider\",\n"
                + "    \"methodName\": \"invoke\",\n"
                + "    \"fileName\": \"JUnit4Provider.java\",\n"
                + "    \"lineNumber\": 112\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"sun.reflect.NativeMethodAccessorImpl\",\n"
                + "    \"methodName\": \"invoke0\",\n"
                + "    \"fileName\": \"NativeMethodAccessorImpl.java\",\n"
                + "    \"lineNumber\": -2\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"sun.reflect.NativeMethodAccessorImpl\",\n"
                + "    \"methodName\": \"invoke\",\n"
                + "    \"fileName\": \"NativeMethodAccessorImpl.java\",\n"
                + "    \"lineNumber\": 62\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"sun.reflect.DelegatingMethodAccessorImpl\",\n"
                + "    \"methodName\": \"invoke\",\n"
                + "    \"fileName\": \"DelegatingMethodAccessorImpl.java\",\n"
                + "    \"lineNumber\": 43\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"java.lang.reflect.Method\",\n"
                + "    \"methodName\": \"invoke\",\n"
                + "    \"fileName\": \"Method.java\",\n"
                + "    \"lineNumber\": 498\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.apache.maven.surefire.util.ReflectionUtils\",\n"
                + "    \"methodName\": \"invokeMethodWithArray\",\n"
                + "    \"fileName\": \"ReflectionUtils.java\",\n"
                + "    \"lineNumber\": 189\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy\",\n"
                + "    \"methodName\": \"invoke\",\n"
                + "    \"fileName\": \"ProviderFactory.java\",\n"
                + "    \"lineNumber\": 165\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.apache.maven.surefire.booter.ProviderFactory\",\n"
                + "    \"methodName\": \"invokeProvider\",\n"
                + "    \"fileName\": \"ProviderFactory.java\",\n"
                + "    \"lineNumber\": 85\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.apache.maven.surefire.booter.ForkedBooter\",\n"
                + "    \"methodName\": \"runSuitesInProcess\",\n"
                + "    \"fileName\": \"ForkedBooter.java\",\n"
                + "    \"lineNumber\": 115\n"
                + "  },\n"
                + "  {\n"
                + "    \"declaringClass\": \"org.apache.maven.surefire.booter.ForkedBooter\",\n"
                + "    \"methodName\": \"main\",\n"
                + "    \"fileName\": \"ForkedBooter.java\",\n"
                + "    \"lineNumber\": 75\n"
                + "  }\n"
                + "]";
        //System.out.println(result);
        assertThat("Expect a string like: ".concat(expected), result, equalTo(expected));
    }

}
